imports:
    - { resource: parameters.yml }
    - { resource: doctrine_extensions.yml }
    - { resource: security.yml }

framework:
    esi:             { enabled: true }
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  session.handler.memcached
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
            resources:
                - "::forms.html.twig"
    globals:
        switch_user_param: "%switch_user_param%"
        base_url: "%router.request_context.scheme%://%router.request_context.host%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    # bundles:        [ ]
    #java: /usr/bin/java
    filters:
        less:
            node: %node%
            node_paths: [ %node_paths% ]
            apply_to: "\.less$"
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Memcache Configuration
lsw_memcache:
    session:
        client: default
    clients:
        default:
            hosts:
              - { dsn: "%session_memcache_host%", port: "%session_memcache_port%" }
            options:
                compression: true
                prefix_key: "%session_memcache_prefix%"

    doctrine:
            metadata_cache:
                client: default
                entity_manager: default          # the name of your entity_manager connection
                document_manager: default        # the name of your document_manager connection
            result_cache:
                client: default
                entity_manager: [default, read]  # you may specify multiple entity_managers
                prefix: "%session_memcache_prefix%"                # you may specify a prefix for the entries
            query_cache:
                client: default
                entity_manager: default
snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: %redis_host%
            options:
                prefix: %redis_prefix%

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: %redis_host%
            options:
                prefix: %redis_prefix%

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                logging: false
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
            verifier:
                logging: false
                driver:   "%database_verifier_driver%"
                host:     "%database_verifier_host%"
                port:     "%database_verifier_port%"
                dbname:   "%database_verifier_name%"
                user:     "%database_verifier_user%"
                password: "%database_verifier_password%"
                charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        #auto_mapping: true
        default_entity_manager:   default
        entity_managers:
            default:
                connection: default
                mappings:
                    WebDNAAppBundle: ~
                    WebDNAUserBundle: ~
            verifier:
                connection: verifier
                mappings:
                    WebDNAVerifierBundle: ~

# FOS User Configuration
fos_user:
    service:
        mailer: fos_user.mailer.twig_swift
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: WebDNA\Bundle\UserBundle\Entity\User
    from_email:
            address:        %sender_email_address%
            sender_name:    %sender_name%
    profile:
        form:
            type: webdna_user_profile
            name: webdna_user_profile
    registration:
        form:
            type: webdna_user_registration
            name: webdna_user_registration
        confirmation:
            enabled: true
            from_email:
                address:        %sender_email_address%
                sender_name:    WebDNA.io
    resetting:
        email:
            template:   WebDNAUserBundle:Resetting:email.html.twig
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"

# MailChimp Bundle Configuration
mz_mail_chimp:
    api_key:      86550b575ab9080a3966dff344e10bff-us5
    default_list: 47482ff52c
    ssl:          true

# KNPGaufrette Bundle Configuration
knp_gaufrette:
    adapters:
        main:
            local:
                directory: %kernel.root_dir%/../web/uploads
        analysis_process_inputs:
            aws_s3:
                service_id: storage.aws_s3.client
                bucket_name: webdnastorage
                options:
                    directory: uploads/analysis_processes/inputs
    filesystems:
        main:
            adapter: main
            alias:  filesystem_main
        analysis_process_inputs:
            adapter: analysis_process_inputs
            alias:  filesystem_analysis_process_inputs

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: WebDNAAppBundle:Common:pagination_sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

# OneUploader Bundle Configuration
oneup_uploader:
    mappings:
        backlinks:
            frontend: dropzone
            namer: uploader.namer.analysis_input_uniqid_namer
            storage:
                type: gaufrette
                filesystem: filesystem_analysis_process_inputs

# Old Sound RabbitMQ Bundle Configuration
old_sound_rabbit_mq:
    connections:
        default:
            host:     '%rabbitmq_host%'
            port:     %rabbitmq_port%
            user:     '%rabbitmq_user%'
            password: '%rabbitmq_password%'
            vhost:    '%rabbitmq_vhost%'
            lazy:     false
            # connection_timeout: 3
            # read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            # keepalive: false

            # requires php-amqplib v2.4.1+
            # heartbeat: 0
    producers:
        link_analysis:
            class:            WebDNA\Bundle\AppBundle\Producer\LinkAnalysisProducer
            connection:       default
            exchange_options: { name: 'link_analysis', type: direct }
        demo_link_analysis:
            class:            WebDNA\Bundle\AppBundle\Producer\DemoLinkAnalysisProducer
            connection:       default
            exchange_options: { name: 'link_analysis', type: direct }
        internal_link_analysis:
             class:            WebDNA\Bundle\AppBundle\Producer\InternalLinkAnalysisProducer
             connection:       default
             exchange_options: { name: 'link_analysis', type: direct }
        backlinks:
             class:            "WebDNA\Bundle\AppBundle\\Producer\BacklinksProducer"
             connection:       default
             exchange_options: { name: 'backlinks', type: direct }
    multiple_consumers:
        link_analysis:
            connection:       default
            exchange_options: { name: 'link_analysis', type: direct }
            qos_options:      { prefetch_size: 0, prefetch_count: 1, global: false }
            queues_provider:  link_analysis_queue_provider
        demo_link_analysis:
            connection:       default
            exchange_options: { name: 'link_analysis', type: direct }
            qos_options:      { prefetch_size: 0, prefetch_count: 1, global: false }
            queues_provider:  demo_link_analysis_queue_provider
        internal_link_analysis:
            connection:       default
            exchange_options: { name: 'link_analysis', type: direct }
            qos_options:      { prefetch_size: 0, prefetch_count: 1, global: false }
            queues_provider:  internal_link_analysis_queue_provider
        backlinks:
            connection:       default
            exchange_options: { name: 'backlinks', type: direct }
            qos_options:      { prefetch_size: 0, prefetch_count: 1, global: false }
            queues_provider:  backlinks_queue_provider
# Services
services:
    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

    session.memcached:
        class: Memcached
        calls:
            - [ addServer, [ %session_memcache_host%, %session_memcache_port% ]]

    session.handler.memcached:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: [@session.memcached, { prefix: %session_memcache_prefix%, expiretime: %session_memcache_expire% }]