<?php

namespace WebDNA\Bundle\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

use WebDNA\Bundle\AppBundle\Entity\Website;
use WebDNA\Bundle\AppBundle\Entity\WebsiteStats;
use WebDNA\Bundle\AppBundle\Repository\Interfaces\WebsiteStatsRepositoryInterface;

/**
 * WebsiteStatsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WebsiteStatsRepository extends EntityRepository implements WebsiteStatsRepositoryInterface
{

    /**
     * @param WebsiteStats $websiteStats
     * @return mixed|void
     */
    public function save(WebsiteStats $websiteStats)
    {
        $this->_em->persist($websiteStats);

        return $this->_em->flush();
    }

    /**
     * @param Website $website
     * @return mixed
     */
    public function findByWebsite(Website $website)
    {
        return $this->findOneBy(array('analysisProcess' => $website));
    }

    /**
     * @param void
     * @return Int
     */
    public function countAll()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT COUNT(ap.id) FROM WebDNAAppBundle:WebsiteStats ap')
            ->getSingleScalarResult();
    }

    /**
     * @param Website $website
     * @return mixed
     */
    public function getSummary(Website $website)
    {
        return $this->getEntityManager()->createQueryBuilder()
            ->select('p,
            p.negative, p.positive, p.malware, p.analyzedDomains, p.linksFound')
            ->from('WebDNAAppBundle:WebsiteStats', 'w')
            ->where('w.website = :id')
            ->setParameter('id', $website->getId())
            ->getQuery()
            ->getOneOrNullResult();
    }
}
