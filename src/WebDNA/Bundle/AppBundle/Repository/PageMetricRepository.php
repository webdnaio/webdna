<?php

namespace WebDNA\Bundle\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use WebDNA\Bundle\AppBundle\Entity\Page;
use WebDNA\Bundle\AppBundle\Entity\PageMetric;
use WebDNA\Bundle\AppBundle\Repository\Interfaces\PageMetricRepositoryInterface;
use WebDNA\Bundle\AppBundle\Entity\Website;

/**
 * PageMetricRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageMetricRepository extends EntityRepository implements PageMetricRepositoryInterface
{
    /**
     * @param PageMetric $pageMetric
     * @return mixed|void
     */
    public function save(PageMetric $pageMetric)
    {
        $this->_em->merge($pageMetric);

        return $this->_em->flush();
    }

    /**
     * @param Website $website
     * @param Page $page
     * @return mixed
     */
    public function findByWebsitePage(Website $website, Page $page)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('pm')
            ->from('WebDNAAppBundle:PageMetric', 'pm')
            ->where('pm.website = :website')
            ->andWhere('pm.page = :page')
            ->setParameters(['website' => $website->getId(), 'page' => $page->getId()])
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param void
     * @return Int
     */
    public function countAll()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT COUNT(wuc.id) FROM WebDNAAppBundle:PageMetric pm')
            ->getSingleScalarResult();
    }

    /**
     * @param PageMetric $pageMetric
     * @return mixed
     */
    public function remove(PageMetric $pageMetric)
    {
        $this->_em->remove($pageMetric);

        return $this->_em->flush();
    }
}
