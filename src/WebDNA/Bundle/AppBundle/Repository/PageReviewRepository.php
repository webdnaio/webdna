<?php

namespace WebDNA\Bundle\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use WebDNA\Bundle\AppBundle\Entity\Base\Page;
use WebDNA\Bundle\AppBundle\Entity\PageReview;
use WebDNA\Bundle\AppBundle\Repository\Interfaces\PageReviewRepositoryInterface;
use WebDNA\Bundle\AppBundle\Entity\Website;

/**
 * PageReviewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageReviewRepository extends EntityRepository implements PageReviewRepositoryInterface
{
    /**
     * @param PageReview $pageReview
     * @return mixed|void
     */
    public function save(PageReview $pageReview)
    {
        $this->_em->persist($pageReview);

        return $this->_em->flush();
    }

    /**
     * @param void
     * @return Int
     */
    public function countAll()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT COUNT(wuc.id) FROM WebDNAAppBundle:PageReview wuc')
            ->getSingleScalarResult();
    }

    /**
     * @param PageReview $pageReview
     * @return mixed
     */
    public function remove(PageReview $pageReview)
    {
        $this->_em->remove($pageReview);

        return $this->_em->flush();
    }

    /**
     * @param Page $page
     * @param Website $website
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByPageAndWebsite(Page $page, Website $website)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT pr FROM WebDNAAppBundle:PageReview pr WHERE pr.page=:page and pr.website=:website')
            ->setParameters(['page' => $page, 'website' => $website])
            ->getOneOrNullResult();
    }

    /**
     * @param array $ids
     * @param Website $website
     * @return mixed
     */
    public function markAsReviewed(array $ids, Website $website)
    {
    }
}
